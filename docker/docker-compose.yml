version: '3.5'

services:
#  nginx:
#      build: ./nginx
#      ports:
#        - "80:80"
#      volumes:
#        - ./nginx/vhost:/etc/nginx/conf/vhost:ro
#      environment:
#          - DEBUG=true
#          - HOST_OS=linux
#      networks:
#              cfarr:
#                  aliases:
#                    - nginx
  mysql:
      build: ./mysql
      hostname: mysql
      ports:
        - "3306:3306"
      environment:
        MYSQL_ROOT_PASSWORD: root
      volumes:
        - /tmp/:/tmp/
      networks:
                  cfarr:
                      aliases:
                        - mysql

  redis:
      image: redis:latest
      ports:
        - "6379:6379"
      volumes:
        - /Users/:/Users/
      networks:
                  cfarr:
                      aliases:
                        - redis
  rmqnamesrv:
    image: foxiswho/rocketmq:server
    container_name: rmqnamesrv
    ports:
      - 9876:9876
    volumes:
      - ./data/rmq:/opt/logs
      - ./data/rmqstore:/opt/rmqstore
    networks:
      cfarr:
        aliases:
        - rmqnamesrv
  rmqbroker:
    image: foxiswho/rocketmq:broker
    container_name: rmqbroker
    ports:
      - 10909:10909
      - 10911:10911
    volumes:
      - ./data/rmq:/opt/logs
      - ./data/rmqstore:/opt/rmqstore
  #    - ./data/conf/broker.conf:/etc/rocketmq/broker.conf:ro
    environment:
      NAMESRV_ADDR: "rmqnamesrv:9876"
      JAVA_OPTS: " -Duser.home=/opt"
      JAVA_OPT_EXT: "-server -Xms128m -Xmx128m -Xmn128m"
    command: mqbroker -c /etc/rocketmq/broker.conf
    depends_on:
    - rmqnamesrv
    networks:
      cfarr:
        aliases:
        - rmqbroker

  rmqconsole:
    image: styletang/rocketmq-console-ng
    container_name: rmqconsole
    ports:
    - 8180:8080
    environment:
      JAVA_OPTS: "-Drocketmq.namesrv.addr=rmqnamesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false"
    depends_on:
    - rmqnamesrv
    networks:
      cfarr:
        aliases:
        - rmqconsole

  consulServer1:
      image: consul
      command: consul agent -server -bind=10.2.1.101 -node=consulServer1 -bootstrap-expect=3 -data-dir /tmp/consul -client 0.0.0.0
      environment:
      - 'CONSUL_LOCAL_CONFIG={"skip_leave_on_interrupt": true}'
      networks:
        cfarr:
          aliases:
          - consulServer1
        cfarr-c:
          ipv4_address: 10.2.1.101
          aliases:
          - consulServer1

  consulServer2:
      image: consul
      command: consul agent -server -bind=10.2.1.102 -node=consulServer2 -join 10.2.1.101 -data-dir /tmp/consul
      environment:
      - 'CONSUL_LOCAL_CONFIG={"skip_leave_on_interrupt": true}'
      networks:
        cfarr:
          aliases:
          - consulServer2
        cfarr-c:
          ipv4_address: 10.2.1.102
          aliases:
          - consulServer2
      depends_on:
      - consulServer1

  consulServer3:
      image: consul
      command: consul agent -server -bind=10.2.1.103 -node=consulServer3 -join 10.2.1.101 -data-dir /tmp/consul
      environment:
      - 'CONSUL_LOCAL_CONFIG={"skip_leave_on_interrupt": true}'
      networks:
        cfarr:
          aliases:
          - consulServer3
        cfarr-c:
          ipv4_address: 10.2.1.103
          aliases:
          - consulServer3
      depends_on:
      - consulServer1

  consulManger:
      image: consul
      command: consul agent -bind=10.2.1.100 -node=mangaer -join 10.2.1.101 -data-dir /tmp/consul -config-dir /consul/config -client 0.0.0.0 -ui
      ports:
      - "8500:8500"
      environment:
      - 'CONSUL_LOCAL_CONFIG={"leave_on_terminate": true,"enable_script_checks":true}'
      volumes:
      - ./data/consul/consul.d:/consul/config
      networks:
        cfarr:
          aliases:
          - consulManger
        cfarr-c:
          ipv4_address: 10.2.1.100
          aliases:
          - consulManger
      depends_on:
      - consulServer1

#  fabio:
#    image: magiconair/fabio
##    container_name: fabio
#    hostname: fabio
#    ports:
#      - "9998:9998"
#      - "9999:9999"
#    volumes:
#      - ./data/fabio/fabio.properties:/etc/fabio/fabio.properties
#    networks:
#      cfarr:
#        aliases:
#        - fabio
#      cfarr-c:
#        ipv4_address: 10.2.1.110
#        aliases:
#        - fabio
#      depends_on:
#      - consulServer1
  apollo:
    image: foxiswho/docker-apollo:latest
    container_name: apollo
    hostname: apollo
    ports:
    - "8070:8070"
    - "8080:8080"
    - "8090:8090"
    - "8081:8081"
    - "8091:8091"
    - "8082:8082"
    - "8092:8092"
    - "8083:8083"
    - "8093:8093"
    volumes:
    - ./data/apollo:/opt
    environment:
      # 开启Portal,默认端口: 8070
      PORTAL_DB: jdbc:mysql://mysql:3306/ApolloPortalDB?characterEncoding=utf8
      PORTAL_DB_USER: root
      PORTAL_DB_PWD: root

      # 开启dev环境, 默认端口: config 8080, admin 8090
      DEV_DB: jdbc:mysql://mysql:3306/ApolloConfigDBDev?characterEncoding=utf8
      DEV_DB_USER: root
      DEV_DB_PWD: root

      # 开启fat环境, 默认端口: config 8081, admin 8091
      #FAT_DB: jdbc:mysql://mysql:3306/ApolloConfigDBFat?characterEncoding=utf8
      #FAT_DB_USER: root
      #FAT_DB_PWD: toor
      # 可修改端口.
      #FAT_CONFIG_PORT: 8050
      #FAT_ADMIN_PORT: 8051

      # 指定远程uat地址
      #UAT_URL: http://192.168.1.2:8080

      # 指定远程pro地址
      #PRO_URL: http://www.baidu.com:8080
    networks:
      cfarr:
        aliases:
        - apollo
    depends_on:
        - mysql
networks:
  cfarr:
    name: cfarr
    driver: bridge
  cfarr-c:
    name: cfarr-c
    driver: macvlan
    ipam:
      driver: default
      config:
      - subnet: 10.2.1.0/24